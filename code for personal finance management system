Step-by-Step Code
1. Transaction.java (Data Model)
java
Copy code
// src/Transaction.java

public class Transaction {
    private String date;
    private String category;
    private double amount;
    private String description;

    // Constructor
    public Transaction(String date, String category, double amount, String description) {
        this.date = date;
        this.category = category;
        this.amount = amount;
        this.description = description;
    }

    // Getters
    public String getDate() { return date; }
    public String getCategory() { return category; }
    public double getAmount() { return amount; }
    public String getDescription() { return description; }

    // Method to display transaction details
    @Override
    public String toString() {
        return String.format("Date: %s, Category: %s, Amount: %.2f, Description: %s",
                             date, category, amount, description);
    }
}
2. FinanceManager.java (Core Logic)
java
Copy code
// src/FinanceManager.java

import java.util.ArrayList;
import java.util.List;

public class FinanceManager {
    private List<Transaction> transactions;
    private double totalIncome;
    private double totalExpenses;

    // Constructor
    public FinanceManager() {
        this.transactions = new ArrayList<>();
        this.totalIncome = 0;
        this.totalExpenses = 0;
    }

    // Add a transaction
    public void addTransaction(Transaction transaction) {
        transactions.add(transaction);
        if (transaction.getAmount() > 0) {
            totalIncome += transaction.getAmount();
        } else {
            totalExpenses += transaction.getAmount();
        }
    }

    // View all transactions
    public void viewTransactions() {
        if (transactions.isEmpty()) {
            System.out.println("No transactions found.");
        } else {
            for (Transaction transaction : transactions) {
                System.out.println(transaction);
            }
        }
    }

    // Get total income
    public double getTotalIncome() {
        return totalIncome;
    }

    // Get total expenses
    public double getTotalExpenses() {
        return totalExpenses;
    }

    // Get balance (income - expenses)
    public double getBalance() {
        return totalIncome + totalExpenses;
    }

    // Generate a report
    public void generateReport() {
        System.out.println("=== Monthly Financial Summary ===");
        System.out.println("Total Income: $" + totalIncome);
        System.out.println("Total Expenses: $" + totalExpenses);
        System.out.println("Balance: $" + getBalance());
    }
}
3. Utils.java (Utility Methods)
java
Copy code
// src/Utils.java

import java.util.Scanner;

public class Utils {
    // Method to read a double value
    public static double readDouble(String prompt) {
        Scanner scanner = new Scanner(System.in);
        System.out.print(prompt);
        return scanner.nextDouble();
    }

    // Method to read a string
    public static String readString(String prompt) {
        Scanner scanner = new Scanner(System.in);
        System.out.print(prompt);
        return scanner.nextLine();
    }
}
4. Main.java (Entry Point)
java
Copy code
// src/Main.java

import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        FinanceManager financeManager = new FinanceManager();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            // Display menu options
            System.out.println("\n=== Personal Finance Management System ===");
            System.out.println("1. Add Transaction");
            System.out.println("2. View Transactions");
            System.out.println("3. Show Financial Summary");
            System.out.println("4. Exit");

            // Get user's choice
            System.out.print("Choose an option (1-4): ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline left over

            switch (choice) {
                case 1:  // Add a transaction
                    String date = Utils.readString("Enter transaction date (YYYY-MM-DD): ");
                    String category = Utils.readString("Enter transaction category: ");
                    double amount = Utils.readDouble("Enter amount: ");
                    String description = Utils.readString("Enter description: ");
                    
                    Transaction transaction = new Transaction(date, category, amount, description);
                    financeManager.addTransaction(transaction);
                    System.out.println("Transaction added successfully!");
                    break;

                case 2:  // View all transactions
                    financeManager.viewTransactions();
                    break;

                case 3:  // Show financial summary
                    financeManager.generateReport();
                    break;

                case 4:  // Exit
                    System.out.println("Exiting the system. Goodbye!");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid option, please choose again.");
            }
        }
    }
}
5. Running the Program
To run the project:

Compile the Code:

Navigate to the src directory in your terminal and compile the Java files:

bash
Copy code
javac *.java
Run the Program:

After compiling, run the program:

bash
Copy code
java Main
Sample Output:
sql
Copy code
=== Personal Finance Management System ===
1. Add Transaction
2. View Transactions
3. Show Financial Summary
4. Exit
Choose an option (1-4): 1
Enter transaction date (YYYY-MM-DD): 2024-11-01
Enter transaction category: Groceries
Enter amount: 100.50
Enter description: Weekly groceries

Transaction added successfully!

=== Personal Finance Management System ===
1. Add Transaction
2. View Transactions
3. Show Financial Summary
4. Exit
Choose an option (1-4): 2
Date: 2024-11-01, Category: Groceries, Amount: 100.50, Description: Weekly groceries

=== Personal Finance Management System ===
1. Add Transaction
2. View Transactions
3. Show Financial Summary
4. Exit
Choose an option (1-4): 3
=== Monthly Financial Summary ===
Total Income: $100.50
Total Expenses: $0.00
Balance: $100.50
